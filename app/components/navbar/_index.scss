@use "innoq-styleguide/dist/sass/settings/colors" as colors;
@use "../../assets/stylesheets/breakpoints" as breakpoints;
@use "../../assets/stylesheets/typography" as typography;
@use "../../assets/stylesheets/helpers" as helpers;
@use "../../assets/stylesheets/spacers" as spacers;

/* Default behavior of navbar when not in the navbar-layout
which moves the navbar to the left-hand side */
.navbar {
  background-color: colors.$brand-blue;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(4rem, 1fr));

  a {
    color: colors.$brand-blue-25;
    text-decoration: none;

    &:hover {
      background-color: colors.$brand-blue-75;
    }
  }

  .navbar-item {
    display: grid;
    grid-template-rows: 4rem;
    grid-template-columns: 1fr 0;

    .symbol {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .label {
      overflow: hidden;
      display: flex;
      align-items: center;
      margin: 0 1rem;
    }

    &.current {
      .symbol {
        background-color: colors.$brand-blue-75;
      }
      .label {
        color: colors.$brand-red;
      }
    };
    &.brand {
      .label {
        @include helpers.visually-hidden();
      }
      &:hover {
        background-color: colors.$brand-blue;
      }
    }
    &.brand + .navbar-item {
      grid-template-rows: 1px [item-start] calc(4rem - 1px);
      &::before {
        content: "";
        margin: 0 spacers.$spacer-xs;
        border-bottom: 1px solid colors.$brand-blue-75;
      }
      .symbol, .label {
        grid-row-start: item-start;
      }
    }
  }
}
.secondary-navbar {
  background-color: colors.$brand-gray-75;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(4rem, 1fr));
  a {
    color: colors.$brand-gray-25;
    text-decoration: none;

    &:hover {
      background-color: colors.$brand-gray-50;
    }
  }
  .navbar-item {
    display: grid;
    grid-template-rows: 3rem;
    grid-template-columns: 1fr 0;

    .symbol {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .label {
      overflow: hidden;
      display: flex;
      align-items: center;
      margin: 0 1rem;
      font-size: typography.$font-size-sm;
    }

    &.current {
      color: white;
    };
  }
}

.navbar-layout {
  display: grid;
  /* We expect only the `main` element as a child of this component
  apart from the navbar */
  grid-template-rows: 1fr [secondary-navbar-start] 3rem [navbar-start] auto;
  min-height: 100vh;

  .navbar {
    --col-width: 0;
    position: sticky;
    bottom: 0;
    grid-row-start: navbar-start;
    z-index: 1;
  }

  .secondary-navbar {
    position: sticky;
    bottom: 4rem;
    grid-row-start: secondary-navbar-start;
    z-index: 1;
  }

  @include breakpoints.for-tablet-portrait-up {
    grid-template-rows: [secondary-navbar-start] 4rem auto [main-content-end];
    grid-template-columns: [navbar-start] 4rem auto [navbar-end] 1fr;

    .navbar {
      grid-row: secondary-navbar-start / main-content-end;
      grid-column: navbar-start / navbar-end;
      grid-template-rows: repeat(auto-fill, 4rem);
      grid-template-columns: 4rem var(--col-width);

      &:hover {
        --col-width: max-content;
      }

      .navbar-item {
        grid-column: 1 / -1;
        grid-template-columns: 4rem var(--col-width);
        /* Since 4rem var(--col-width) is the width of the parent tracks,
        we can use subgrid instead of repeating it here.
        Currently only in Firefox supported, so we need both. */
        grid-template-columns: subgrid;
      }

      .brand {
        width: 0;
      }
    }
    .secondary-navbar {
      display: flex;
      .navbar-item:first-child {
        margin-left: auto;
      }
      .navbar-item:last-child {
        margin-right: auto;
      }

      .navbar-item {
        grid-template-rows: auto auto;
        grid-template-columns: auto;
        align-items: center;
        max-width: 15rem;
        flex-grow: 1;

        .symbol {
          align-self: end;
        }
        .label {
          justify-self: center;
          align-self: start;
        }
      }
    }

    & > :not(.navbar) {
      grid-column-start: navbar-end;
    }
  }
}
